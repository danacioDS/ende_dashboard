import streamlit as st

import importlib.util
import sys
from pathlib import Path
import subprocess
import os

# Configuraci√≥n general de la p√°gina
st.set_page_config(
    page_title="Dashboard Energ√≠a Bolivia",
    page_icon="‚ö°",
    layout="wide"
)

st.title("‚ö° Dashboard Energ√©tico de Bolivia")

# Imagen representativa
st.image(
    "https://media.istockphoto.com/id/1032683612/photo/solar-energy-and-wind-power-stations.jpg?s=612x612&w=0&k=20&c=KXElDTxrRrXG72sVD4QGnctJU1iSMroKPOl6XUfGHNk=",
    caption="Energ√≠as renovables impulsando el futuro de Bolivia"
)


# Texto introductorio
st.markdown("""
## üîç Exploraci√≥n de Indicadores del Sector El√©ctrico

Este dashboard interactivo te permite analizar los principales indicadores tarifarios y econ√≥micos del sector el√©ctrico boliviano, con enfoque especial en:

- üåû **Precio de Energ√≠a**
- üí° **Precio de Potencia**
- üìä **Precio Mon√≥mico**

Est√° dise√±ado para apoyar la toma de decisiones estrat√©gicas en torno a la transici√≥n energ√©tica, la planificaci√≥n regulatoria y el an√°lisis de desempe√±o de los agentes del sistema el√©ctrico.

---

üß≠ **Usa el men√∫ lateral izquierdo** para navegar por las secciones del dashboard.
""")

st.success("üìå Este dashboard es parte del esfuerzo por promover la transparencia y sostenibilidad del sistema el√©ctrico nacional.")

# Funci√≥n para ejecutar un script externo
def ejecutar_script(ruta_script):
    """Ejecuta un script Python externo"""
    try:
        # Verificar si el archivo existe
        if not os.path.exists(ruta_script):
            st.error(f"El archivo {ruta_script} no existe")
            return
        
        # Ejecutar el script
        result = subprocess.run([sys.executable, ruta_script], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            st.success("Script ejecutado correctamente")
            if result.stdout:
                st.code(result.stdout, language='python')
        else:
            st.error(f"Error al ejecutar el script: {result.stderr}")
            
    except Exception as e:
        st.error(f"Error: {str(e)}")

# Funci√≥n para mostrar el contenido de un script
def mostrar_codigo(ruta_script):
    """Muestra el c√≥digo de un script"""
    try:
        with open(ruta_script, 'r', encoding='utf-8') as file:
            codigo = file.read()
        st.code(codigo, language='python')
    except Exception as e:
        st.error(f"Error al leer el archivo: {str(e)}")

# Men√∫ lateral principal
st.sidebar.title("Navegaci√≥n Principal")
modulo_principal = st.sidebar.radio(
    "Selecciona el m√≥dulo",
    ("Generaci√≥n", "Distribuci√≥n", "Documentaci√≥n"),
    index=0
)

# M√≥dulo de Generaci√≥n
if modulo_principal == "Generaci√≥n":
    st.header("üè≠ M√≥dulo de Generaci√≥n")
    
    # Submen√∫ para scripts de generaci√≥n
    st.sidebar.markdown("---")
    st.sidebar.subheader("üìä Scripts de Generaci√≥n")
    
    script_generacion = st.sidebar.selectbox(
        "Selecciona el script a ejecutar",
        [
            "Seleccionar script",
            "energia_por_generador.py",
            "energia_por_tecnologia.py", 
            "capacidad_instalada.py",
            "costos_generacion.py",
            "mix_energetico.py"
        ]
    )
    
    # Contenedor principal para los scripts
    if script_generacion != "Seleccionar script":
        ruta_script = f"./generacion/{script_generacion}"
        
        st.subheader(f"Ejecutando: {script_generacion}")
        
        # Pesta√±as para diferentes acciones
        tab1, tab2, tab3 = st.tabs(["üìä Ejecutar Script", "üëÄ Ver C√≥digo", "üìã Descripci√≥n"])
        
        with tab1:
            st.info(f"Ejecutando {script_generacion}...")
            if st.button("‚ñ∂Ô∏è Ejecutar Script", type="primary"):
                with st.spinner("Ejecutando script..."):
                    ejecutar_script(ruta_script)
        
        with tab2:
            st.info("Visualizando el c√≥digo fuente:")
            mostrar_codigo(ruta_script)
        
        with tab3:
            # Descripciones de cada script
            descripciones = {
                "energia_por_generador.py": """
                ## üìà Energ√≠a por Generador
                
                **Descripci√≥n:** Este script analiza la producci√≥n de energ√≠a desagregada por cada generador individual del sistema.
                
                **Funcionalidades:**
                - Producci√≥n horaria/diaria por generador
                - Factor de planta individual
                - Disponibilidad y horas de operaci√≥n
                - An√°lisis de eficiencia por unidad
                
                **Outputs principales:**
                - Reporte de producci√≥n por generador
                - Gr√°ficos de tendencia individual
                - Indicadores de performance
                """,
                
                "energia_por_tecnologia.py": """
                ## üîß Energ√≠a por Tecnolog√≠a
                
                **Descripci√≥n:** An√°lisis agregado de generaci√≥n por tipo de tecnolog√≠a.
                
                **Funcionalidades:**
                - Producci√≥n por tecnolog√≠a (t√©rmica, hidro, solar, e√≥lica, etc.)
                - Participaci√≥n porcentual en el mix
                - Evoluci√≥n temporal por tecnolog√≠a
                - Comparativa entre tecnolog√≠as
                
                **Outputs principales:**
                - Mix energ√©tico nacional
                - Curvas de duraci√≥n por tecnolog√≠a
                - An√°lisis estacional por tipo de generaci√≥n
                """,
                
                "capacidad_instalada.py": """
                ## üèóÔ∏è Capacidad Instalada
                
                **Descripci√≥n:** An√°lisis de la capacidad instalada y disponible del sistema.
                
                **Funcionalidades:**
                - Capacidad instalada por tecnolog√≠a
                - Capacidad disponible neta
                - Reserva del sistema
                - Proyecciones de capacidad
                
                **Outputs principales:**
                - Matriz de capacidad instalada
                - Indicadores de reserva
                - Proyecciones de expansi√≥n
                """,
                
                "costos_generacion.py": """
                ## üí∞ Costos de Generaci√≥n
                
                **Descripci√≥n:** An√°lisis de costos marginales y totales de generaci√≥n.
                
                **Funcionalidades:**
                - Costos variables por tecnolog√≠a
                - Costos marginales horarios
                - Costos totales del sistema
                - An√°lisis de eficiencia econ√≥mica
                
                **Outputs principales:**
                - Curva de costos marginales
                - Costos medios por tecnolog√≠a
                - An√°lisis de eficiencia econ√≥mica
                """,
                
                "mix_energetico.py": """
                ## üåø Mix Energ√©tico
                
                **Descripci√≥n:** An√°lisis de la composici√≥n energ√©tica del sistema.
                
                **Funcionalidades:**
                - Participaci√≥n de renovables vs convencionales
                - Intensidad de carbono del sistema
                - Evoluci√≥n del mix energ√©tico
                - Proyecciones de descarbonizaci√≥n
                
                **Outputs principales:**
                - Indicadores de sostenibilidad
                - Intensidad de CO2 por MWh
                - Trayectoria de descarbonizaci√≥n
                """
            }
            
            if script_generacion in descripciones:
                st.markdown(descripciones[script_generacion])
            else:
                st.info("Descripci√≥n no disponible para este script.")
    
    else:
        # Vista por defecto del m√≥dulo de generaci√≥n
        st.info("üåÖ Selecciona un script espec√≠fico del men√∫ lateral para comenzar el an√°lisis.")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            ### üìã Scripts Disponibles - Generaci√≥n
            
            1. **energia_por_generador.py** - Producci√≥n individual por unidad
            2. **energia_por_tecnologia.py** - An√°lisis por tipo de tecnolog√≠a  
            3. **capacidad_instalada.py** - Capacidad instalada y disponible
            4. **costos_generacion.py** - An√°lisis de costos marginales
            5. **mix_energetico.py** - Composici√≥n del mix energ√©tico
            
            ### üöÄ C√≥mo usar:
            - Selecciona un script del men√∫ lateral
            - Ejecuta el script directamente
            - Visualiza el c√≥digo fuente
            - Revisa la documentaci√≥n
            """)
        
        with col2:
            st.markdown("""
            ### üìä M√©tricas Clave del Sistema
            
            **Capacidad Total:** 3,450 MW
            **Generaci√≥n Anual:** 18,200 GWh
            **Factor de Planta:** 58%
            **Participaci√≥n Renovables:** 35%
            
            ### üîß Tecnolog√≠as Disponibles:
            - Hidroel√©ctrica: 1,200 MW
            - T√©rmica (Gas): 1,800 MW
            - Solar: 250 MW
            - E√≥lica: 180 MW
            - Biomasa: 20 MW
            
            ### üìà √öltima Actualizaci√≥n:
            Datos actualizados al √∫ltimo mes operativo
            """)

# M√≥dulo de Distribuci√≥n (estructura similar)
elif modulo_principal == "Distribuci√≥n":
    st.header("üìä M√≥dulo de Distribuci√≥n")
    
    # Submen√∫ para scripts de distribuci√≥n
    st.sidebar.markdown("---")
    st.sidebar.subheader("üìà Scripts de Distribuci√≥n")
    
    script_distribucion = st.sidebar.selectbox(
        "Selecciona el script a ejecutar",
        [
            "Seleccionar script",
            "demanda_zonas.py",
            "perdidas_tecnicas.py",
            "calidad_servicio.py",
            "tarifas_electricas.py",
            "cobertura_servicio.py"
        ],
        key="distribucion_script"
    )
    
    if script_distribucion != "Seleccionar script":
        ruta_script = f"./distribucion/{script_distribucion}"
        st.subheader(f"Ejecutando: {script_distribucion}")
        
        # Implementar l√≥gica similar a generaci√≥n
        tab1, tab2, tab3 = st.tabs(["üìä Ejecutar Script", "üëÄ Ver C√≥digo", "üìã Descripci√≥n"])
        
        with tab1:
            st.info(f"Ejecutando {script_distribucion}...")
            if st.button("‚ñ∂Ô∏è Ejecutar Script", type="primary", key="ejecutar_dist"):
                with st.spinner("Ejecutando script..."):
                    ejecutar_script(ruta_script)
        
        with tab2:
            st.info("Visualizando el c√≥digo fuente:")
            mostrar_codigo(ruta_script)
        
        with tab3:
            st.info("Descripci√≥n del script de distribuci√≥n")
            # Agregar descripciones espec√≠ficas para distribuci√≥n
    
    else:
        st.info("üåÖ Selecciona un script espec√≠fico del men√∫ lateral para comenzar el an√°lisis.")
        # Vista por defecto similar a generaci√≥n

# M√≥dulo de Documentaci√≥n
else:
    st.header("üìö Documentaci√≥n y Recursos")
    
    st.markdown("""
    ## üéØ Gu√≠a de Uso del Dashboard
    
    ### üìã Estructura del Sistema:
    
    **M√≥dulo de Generaci√≥n:**
    - `generacion/energia_por_generador.py` - An√°lisis por unidad generadora
    - `generacion/energia_por_tecnologia.py` - An√°lisis por tecnolog√≠a
    - `generacion/capacidad_instalada.py` - Capacidad del sistema
    - `generacion/costos_generacion.py` - An√°lisis econ√≥mico
    - `generacion/mix_energetico.py` - Composici√≥n energ√©tica
    
    **M√≥dulo de Distribuci√≥n:**
    - `distribucion/demanda_zonas.py` - An√°lisis de demanda
    - `distribucion/perdidas_tecnicas.py` - P√©rdidas del sistema
    - `distribucion/calidad_servicio.py` - Indicadores de calidad
    - `distribucion/tarifas_electricas.py` - An√°lisis tarifario
    - `distribucion/cobertura_servicio.py` - Cobertura geogr√°fica
    
    ### üöÄ C√≥mo ejecutar scripts:
    1. Selecciona el m√≥dulo en el men√∫ principal
    2. Elige el script espec√≠fico del submen√∫ lateral
    3. Usa las pesta√±as para:
       - üìä Ejecutar el script directamente
       - üëÄ Ver el c√≥digo fuente
       - üìã Leer la documentaci√≥n
    
    ### ‚öôÔ∏è Requisitos del Sistema:
    - Python 3.8+
    - Librer√≠as listadas en requirements.txt
    - Acceso a la base de datos energ√©tica
    - Permisos de ejecuci√≥n adecuados
    """)

# Pie de p√°gina
st.sidebar.markdown("---")
st.sidebar.info(
    """
    **Dashboard Energ√©tico de Bolivia** 
    \nSistema de an√°lisis del sector el√©ctrico
    \nüìß Contacto: equipo.energia@bolivia.bo
    \nüîÑ Versi√≥n: 2.0.0
    """
)

# Informaci√≥n general
st.markdown("---")
st.success("""
üìå **Sistema de An√°lisis Energ√©tico** - Este dashboard proporciona acceso centralizado 
a todos los scripts de an√°lisis del sector el√©ctrico boliviano. Selecciona un m√≥dulo 
y script espec√≠fico para comenzar tu an√°lisis.
""")
